#include <stdio.h>
#include <string.h>

#define NUM_USERS 3
#define NUM_GENRES 5
#define NUM_BOOKS 5

// User-Genre Ratings Matrix
int genreRatings[NUM_USERS][NUM_GENRES] = {
    {5, 3, 4, 4, 1},
    {3, 1, 5, 3, 2},
    {4, 3, 4, 2, 5}
};

// Book-Genre Matrix
int bookGenres[NUM_BOOKS][NUM_GENRES] = {
    {1, 0, 1, 0, 1}, // Book 0 belongs to genres 0, 2, and 4
    {0, 1, 0, 1, 0}, // Book 1 belongs to genres 1 and 3
    {1, 1, 1, 0, 0}, // Book 2 belongs to genres 0, 1, and 2
    {0, 0, 0, 1, 1}, // Book 3 belongs to genres 3 and 4
    {1, 1, 0, 0, 1}  // Book 4 belongs to genres 0, 1, and 4
};

// Book titles
const char *bookTitles[NUM_BOOKS] = {
    "Book A",
    "Book B",
    "Book C",
    "Book D",
    "Book E"
};

// Function to recommend books based on genre preferences
void recommendBooks(int user) {
    float bookScores[NUM_BOOKS] = {0};

    // Calculate scores for each book based on the user's genre ratings
    for (int i = 0; i < NUM_BOOKS; i++) {
        for (int j = 0; j < NUM_GENRES; j++) {
            bookScores[i] += bookGenres[i][j] * genreRatings[user][j];
        }
    }

    // Print book recommendations sorted by score
    printf("Recommendations for user %d:\n", user);
    for (int i = 0; i < NUM_BOOKS; i++) {
        printf("%s: %.2f\n", bookTitles[i], bookScores[i]);
    }
}

int main() {
    int user = 0;
    printf("Enter user ID (0-%d): ", NUM_USERS - 1);
    scanf("%d", &user);

    if (user >= 0 && user < NUM_USERS) {
        recommendBooks(user);
    } else {
        printf("Invalid user ID.\n");
    }

    return 0;
}
